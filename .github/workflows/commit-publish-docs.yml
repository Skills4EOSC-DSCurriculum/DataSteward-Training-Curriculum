name: Publish as Git Book on GitHub Pages
on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - "main"
    paths:
      - "resources/**"
      - "mkdocs.yml"
      - "requirements.txt"
      - "RELEASE_NOTES.md"
      - "CITATION.cff"

jobs:
  determine-exec-order:
    name: Determine execution order
    runs-on: ubuntu-22.04
    outputs:
      citations: ${{ steps.filter.outputs.citations }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: main
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          citations:
            - 'CITATION.cff'
    # run only if 'CITATION.cff' file was changed
    - name: citation changed
      if: steps.filter.outputs.citations == 'true'
      run: echo "CITATION.cff changed"

    # run only if not 'CITATION.cff' files were changed
    - name: citation not changed
      if: steps.filter.outputs.citations != 'true'
      run: echo "CITATION.cff not changed"

  cffconvert:
    uses: ./.github/workflows/commit-cffconvert.yml
    needs: determine-exec-order
    if: ${{ needs.determine-exec-order.outputs.citations == 'true' }}

  signposting:
    uses: ./.github/workflows/signposting.yml
    needs: cffconvert
    if: always() && !failure() && !cancelled()

  deploy_docs:
    name: Deploy docs
    runs-on: ubuntu-22.04
    needs: signposting
    if: always() && !failure() && !cancelled()
    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          cache: 'pip'
          cache-dependency-path: requirements.txt
          python-version: '3.9'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Configure Git user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Deploy with mike
        run: |
          mike deploy --push --update-aliases latest
          git checkout gh-pages
          git cat-file -e gh-pages:index.html 2> /dev/null && echo "Default version already set. Skipping..." || (echo "Setting default version..." && git checkout main && mike set-default --push latest)
